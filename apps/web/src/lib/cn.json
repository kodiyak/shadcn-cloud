{
  "/components/ui/avatar.tsx": "\"use client\";\r\n\r\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Avatar({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Root>) {\r\n\treturn (\r\n\t\t<AvatarPrimitive.Root\r\n\t\t\tdata-slot=\"avatar\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"relative flex size-8 shrink-0 overflow-hidden rounded-full\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction AvatarImage({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Image>) {\r\n\treturn (\r\n\t\t<AvatarPrimitive.Image\r\n\t\t\tdata-slot=\"avatar-image\"\r\n\t\t\tclassName={cn(\"aspect-square size-full\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction AvatarFallback({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof AvatarPrimitive.Fallback>) {\r\n\treturn (\r\n\t\t<AvatarPrimitive.Fallback\r\n\t\t\tdata-slot=\"avatar-fallback\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"bg-muted flex size-full items-center justify-center rounded-full\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Avatar, AvatarImage, AvatarFallback };\r\n",
  "/components/ui/button.tsx": "import { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst buttonVariants = cva(\r\n\t\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t\"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n\t\t\t\tdestructive:\r\n\t\t\t\t\t\"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n\t\t\t\toutline:\r\n\t\t\t\t\t\"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n\t\t\t\tsecondary:\r\n\t\t\t\t\t\"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n\t\t\t\tghost:\r\n\t\t\t\t\t\"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n\t\t\t\tlink: \"text-primary underline-offset-4 hover:underline\",\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\tdefault: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n\t\t\t\tsm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n\t\t\t\tlg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n\t\t\t\ticon: \"size-9\",\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: \"default\",\r\n\t\t\tsize: \"default\",\r\n\t\t},\r\n\t},\r\n);\r\n\r\nfunction Button({\r\n\tclassName,\r\n\tvariant,\r\n\tsize,\r\n\tasChild = false,\r\n\t...props\r\n}: React.ComponentProps<\"button\"> &\r\n\tVariantProps<typeof buttonVariants> & {\r\n\t\tasChild?: boolean;\r\n\t}) {\r\n\tconst Comp = asChild ? Slot : \"button\";\r\n\r\n\treturn (\r\n\t\t<Comp\r\n\t\t\tdata-slot=\"button\"\r\n\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n",
  "/components/ui/card.tsx": "import type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card-header\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card-title\"\r\n\t\t\tclassName={cn(\"leading-none font-semibold\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card-description\"\r\n\t\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card-action\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card-content\"\r\n\t\t\tclassName={cn(\"px-6\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"card-footer\"\r\n\t\t\tclassName={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tCard,\r\n\tCardHeader,\r\n\tCardFooter,\r\n\tCardTitle,\r\n\tCardAction,\r\n\tCardDescription,\r\n\tCardContent,\r\n};\r\n",
  "/components/ui/command.tsx": "\"use client\";\r\n\r\nimport { Command as CommandPrimitive } from \"cmdk\";\r\nimport { SearchIcon } from \"lucide-react\";\r\nimport type * as React from \"react\";\r\nimport {\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogDescription,\r\n\tDialogHeader,\r\n\tDialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Command({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive>) {\r\n\treturn (\r\n\t\t<CommandPrimitive\r\n\t\t\tdata-slot=\"command\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandDialog({\r\n\ttitle = \"Command Palette\",\r\n\tdescription = \"Search for a command to run...\",\r\n\tchildren,\r\n\tclassName,\r\n\tshowCloseButton = true,\r\n\t...props\r\n}: React.ComponentProps<typeof Dialog> & {\r\n\ttitle?: string;\r\n\tdescription?: string;\r\n\tclassName?: string;\r\n\tshowCloseButton?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<Dialog {...props}>\r\n\t\t\t<DialogHeader className=\"sr-only\">\r\n\t\t\t\t<DialogTitle>{title}</DialogTitle>\r\n\t\t\t\t<DialogDescription>{description}</DialogDescription>\r\n\t\t\t</DialogHeader>\r\n\t\t\t<DialogContent\r\n\t\t\t\tclassName={cn(\"overflow-hidden p-0\", className)}\r\n\t\t\t\tshowCloseButton={showCloseButton}\r\n\t\t\t>\r\n\t\t\t\t<Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Command>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nfunction CommandInput({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Input>) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"command-input-wrapper\"\r\n\t\t\tclassName=\"flex h-9 items-center gap-2 border-b px-3\"\r\n\t\t>\r\n\t\t\t<SearchIcon className=\"size-4 shrink-0 opacity-50\" />\r\n\t\t\t<CommandPrimitive.Input\r\n\t\t\t\tdata-slot=\"command-input\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction CommandList({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.List>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.List\r\n\t\t\tdata-slot=\"command-list\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandEmpty({\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Empty>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Empty\r\n\t\t\tdata-slot=\"command-empty\"\r\n\t\t\tclassName=\"py-6 text-center text-sm\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandGroup({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Group>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Group\r\n\t\t\tdata-slot=\"command-group\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandSeparator({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Separator>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Separator\r\n\t\t\tdata-slot=\"command-separator\"\r\n\t\t\tclassName={cn(\"bg-border -mx-1 h-px\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandItem({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Item>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Item\r\n\t\t\tdata-slot=\"command-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandShortcut({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<\"span\">) {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tdata-slot=\"command-shortcut\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"text-muted-foreground ml-auto text-xs tracking-widest\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tCommand,\r\n\tCommandDialog,\r\n\tCommandInput,\r\n\tCommandList,\r\n\tCommandEmpty,\r\n\tCommandGroup,\r\n\tCommandItem,\r\n\tCommandShortcut,\r\n\tCommandSeparator,\r\n};\r\n",
  "/components/ui/dialog.tsx": "\"use client\";\r\n\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport { XIcon } from \"lucide-react\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Dialog({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\r\n\treturn <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\r\n\treturn <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\r\n\treturn <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\r\n\treturn <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\r\n\treturn (\r\n\t\t<DialogPrimitive.Overlay\r\n\t\t\tdata-slot=\"dialog-overlay\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogContent({\r\n\tclassName,\r\n\tchildren,\r\n\tshowCloseButton = true,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\r\n\tshowCloseButton?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<DialogPortal data-slot=\"dialog-portal\">\r\n\t\t\t<DialogOverlay />\r\n\t\t\t<DialogPrimitive.Content\r\n\t\t\t\tdata-slot=\"dialog-content\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t\t{showCloseButton && (\r\n\t\t\t\t\t<DialogPrimitive.Close\r\n\t\t\t\t\t\tdata-slot=\"dialog-close\"\r\n\t\t\t\t\t\tclassName=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XIcon />\r\n\t\t\t\t\t\t<span className=\"sr-only\">Close</span>\r\n\t\t\t\t\t</DialogPrimitive.Close>\r\n\t\t\t\t)}\r\n\t\t\t</DialogPrimitive.Content>\r\n\t\t</DialogPortal>\r\n\t);\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"dialog-header\"\r\n\t\t\tclassName={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"dialog-footer\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogTitle({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\r\n\treturn (\r\n\t\t<DialogPrimitive.Title\r\n\t\t\tdata-slot=\"dialog-title\"\r\n\t\t\tclassName={cn(\"text-lg leading-none font-semibold\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogDescription({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\r\n\treturn (\r\n\t\t<DialogPrimitive.Description\r\n\t\t\tdata-slot=\"dialog-description\"\r\n\t\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tDialog,\r\n\tDialogClose,\r\n\tDialogContent,\r\n\tDialogDescription,\r\n\tDialogFooter,\r\n\tDialogHeader,\r\n\tDialogOverlay,\r\n\tDialogPortal,\r\n\tDialogTitle,\r\n\tDialogTrigger,\r\n};\r\n",
  "/components/ui/drawer.tsx": "\"use client\";\r\n\r\nimport type * as React from \"react\";\r\nimport { Drawer as DrawerPrimitive } from \"vaul\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Drawer({\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) {\r\n\treturn <DrawerPrimitive.Root data-slot=\"drawer\" {...props} />;\r\n}\r\n\r\nfunction DrawerTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Trigger>) {\r\n\treturn <DrawerPrimitive.Trigger data-slot=\"drawer-trigger\" {...props} />;\r\n}\r\n\r\nfunction DrawerPortal({\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Portal>) {\r\n\treturn <DrawerPrimitive.Portal data-slot=\"drawer-portal\" {...props} />;\r\n}\r\n\r\nfunction DrawerClose({\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Close>) {\r\n\treturn <DrawerPrimitive.Close data-slot=\"drawer-close\" {...props} />;\r\n}\r\n\r\nfunction DrawerOverlay({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Overlay>) {\r\n\treturn (\r\n\t\t<DrawerPrimitive.Overlay\r\n\t\t\tdata-slot=\"drawer-overlay\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DrawerContent({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Content>) {\r\n\treturn (\r\n\t\t<DrawerPortal data-slot=\"drawer-portal\">\r\n\t\t\t<DrawerOverlay />\r\n\t\t\t<DrawerPrimitive.Content\r\n\t\t\t\tdata-slot=\"drawer-content\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"group/drawer-content bg-background fixed z-50 flex h-auto flex-col\",\r\n\t\t\t\t\t\"data-[vaul-drawer-direction=top]:inset-x-0 data-[vaul-drawer-direction=top]:top-0 data-[vaul-drawer-direction=top]:mb-24 data-[vaul-drawer-direction=top]:max-h-[80vh] data-[vaul-drawer-direction=top]:rounded-b-lg data-[vaul-drawer-direction=top]:border-b\",\r\n\t\t\t\t\t\"data-[vaul-drawer-direction=bottom]:inset-x-0 data-[vaul-drawer-direction=bottom]:bottom-0 data-[vaul-drawer-direction=bottom]:mt-24 data-[vaul-drawer-direction=bottom]:max-h-[80vh] data-[vaul-drawer-direction=bottom]:rounded-t-lg data-[vaul-drawer-direction=bottom]:border-t\",\r\n\t\t\t\t\t\"data-[vaul-drawer-direction=right]:inset-y-0 data-[vaul-drawer-direction=right]:right-0 data-[vaul-drawer-direction=right]:w-3/4 data-[vaul-drawer-direction=right]:border-l data-[vaul-drawer-direction=right]:sm:max-w-sm\",\r\n\t\t\t\t\t\"data-[vaul-drawer-direction=left]:inset-y-0 data-[vaul-drawer-direction=left]:left-0 data-[vaul-drawer-direction=left]:w-3/4 data-[vaul-drawer-direction=left]:border-r data-[vaul-drawer-direction=left]:sm:max-w-sm\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"bg-muted mx-auto mt-4 hidden h-2 w-[100px] shrink-0 rounded-full group-data-[vaul-drawer-direction=bottom]/drawer-content:block\" />\r\n\t\t\t\t{children}\r\n\t\t\t</DrawerPrimitive.Content>\r\n\t\t</DrawerPortal>\r\n\t);\r\n}\r\n\r\nfunction DrawerHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"drawer-header\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"flex flex-col gap-0.5 p-4 group-data-[vaul-drawer-direction=bottom]/drawer-content:text-center group-data-[vaul-drawer-direction=top]/drawer-content:text-center md:gap-1.5 md:text-left\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DrawerFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"drawer-footer\"\r\n\t\t\tclassName={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DrawerTitle({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Title>) {\r\n\treturn (\r\n\t\t<DrawerPrimitive.Title\r\n\t\t\tdata-slot=\"drawer-title\"\r\n\t\t\tclassName={cn(\"text-foreground font-semibold\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DrawerDescription({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Description>) {\r\n\treturn (\r\n\t\t<DrawerPrimitive.Description\r\n\t\t\tdata-slot=\"drawer-description\"\r\n\t\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tDrawer,\r\n\tDrawerPortal,\r\n\tDrawerOverlay,\r\n\tDrawerTrigger,\r\n\tDrawerClose,\r\n\tDrawerContent,\r\n\tDrawerHeader,\r\n\tDrawerFooter,\r\n\tDrawerTitle,\r\n\tDrawerDescription,\r\n};\r\n",
  "/components/ui/input.tsx": "import type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Input({ className, type, ...props }: React.ComponentProps<'input'>) {\r\n\treturn (\r\n\t\t<input\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\r\n\t\t\t\t'focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]',\r\n\t\t\t\t'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"input\"\r\n\t\t\ttype={type}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Input };\r\n",
  "/components/ui/menubar.tsx": "'use client';\r\n\r\nimport * as MenubarPrimitive from '@radix-ui/react-menubar';\r\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Menubar({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Root>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Root\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-background flex h-9 items-center gap-1 rounded-md border p-1 shadow-xs',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarMenu({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\r\n\treturn <MenubarPrimitive.Menu data-slot=\"menubar-menu\" {...props} />;\r\n}\r\n\r\nfunction MenubarGroup({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\r\n\treturn <MenubarPrimitive.Group data-slot=\"menubar-group\" {...props} />;\r\n}\r\n\r\nfunction MenubarPortal({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\r\n\treturn <MenubarPrimitive.Portal data-slot=\"menubar-portal\" {...props} />;\r\n}\r\n\r\nfunction MenubarRadioGroup({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.RadioGroup data-slot=\"menubar-radio-group\" {...props} />\r\n\t);\r\n}\r\n\r\nfunction MenubarTrigger({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Trigger>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Trigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex items-center rounded-sm px-2 py-1 text-sm font-medium outline-hidden select-none',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-trigger\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarContent({\r\n\tclassName,\r\n\talign = 'start',\r\n\talignOffset = -4,\r\n\tsideOffset = 8,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Content>) {\r\n\treturn (\r\n\t\t<MenubarPortal>\r\n\t\t\t<MenubarPrimitive.Content\r\n\t\t\t\talign={align}\r\n\t\t\t\talignOffset={alignOffset}\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[12rem] origin-(--radix-menubar-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-md',\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"menubar-content\"\r\n\t\t\t\tsideOffset={sideOffset}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</MenubarPortal>\r\n\t);\r\n}\r\n\r\nfunction MenubarItem({\r\n\tclassName,\r\n\tinset,\r\n\tvariant = 'default',\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Item> & {\r\n\tinset?: boolean;\r\n\tvariant?: 'default' | 'destructive';\r\n}) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Item\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-slot=\"menubar-item\"\r\n\t\t\tdata-variant={variant}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarCheckboxItem({\r\n\tclassName,\r\n\tchildren,\r\n\tchecked,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.CheckboxItem>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.CheckboxItem\r\n\t\t\tchecked={checked}\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-checkbox-item\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<MenubarPrimitive.ItemIndicator>\r\n\t\t\t\t\t<CheckIcon className=\"size-4\" />\r\n\t\t\t\t</MenubarPrimitive.ItemIndicator>\r\n\t\t\t</span>\r\n\t\t\t{children}\r\n\t\t</MenubarPrimitive.CheckboxItem>\r\n\t);\r\n}\r\n\r\nfunction MenubarRadioItem({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.RadioItem>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.RadioItem\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-radio-item\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<MenubarPrimitive.ItemIndicator>\r\n\t\t\t\t\t<CircleIcon className=\"size-2 fill-current\" />\r\n\t\t\t\t</MenubarPrimitive.ItemIndicator>\r\n\t\t\t</span>\r\n\t\t\t{children}\r\n\t\t</MenubarPrimitive.RadioItem>\r\n\t);\r\n}\r\n\r\nfunction MenubarLabel({\r\n\tclassName,\r\n\tinset,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Label> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Label\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'px-2 py-1.5 text-sm font-medium data-[inset]:pl-8',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-slot=\"menubar-label\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarSeparator({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Separator>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Separator\r\n\t\t\tclassName={cn('bg-border -mx-1 my-1 h-px', className)}\r\n\t\t\tdata-slot=\"menubar-separator\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarShortcut({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<'span'>) {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'text-muted-foreground ml-auto text-xs tracking-widest',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-shortcut\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarSub({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\r\n\treturn <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />;\r\n}\r\n\r\nfunction MenubarSubTrigger({\r\n\tclassName,\r\n\tinset,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.SubTrigger> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.SubTrigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-none select-none data-[inset]:pl-8',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-slot=\"menubar-sub-trigger\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<ChevronRightIcon className=\"ml-auto h-4 w-4\" />\r\n\t\t</MenubarPrimitive.SubTrigger>\r\n\t);\r\n}\r\n\r\nfunction MenubarSubContent({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.SubContent>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.SubContent\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-menubar-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-sub-content\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tMenubar,\r\n\tMenubarPortal,\r\n\tMenubarMenu,\r\n\tMenubarTrigger,\r\n\tMenubarContent,\r\n\tMenubarGroup,\r\n\tMenubarSeparator,\r\n\tMenubarLabel,\r\n\tMenubarItem,\r\n\tMenubarShortcut,\r\n\tMenubarCheckboxItem,\r\n\tMenubarRadioGroup,\r\n\tMenubarRadioItem,\r\n\tMenubarSub,\r\n\tMenubarSubTrigger,\r\n\tMenubarSubContent,\r\n};\r\n",
  "/components/ui/popover.tsx": "\"use client\";\r\n\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Popover({\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n\treturn <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\r\n}\r\n\r\nfunction PopoverTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n\treturn <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\r\n}\r\n\r\nfunction PopoverContent({\r\n\tclassName,\r\n\talign = \"center\",\r\n\tsideOffset = 4,\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n\treturn (\r\n\t\t<PopoverPrimitive.Portal>\r\n\t\t\t<PopoverPrimitive.Content\r\n\t\t\t\tdata-slot=\"popover-content\"\r\n\t\t\t\talign={align}\r\n\t\t\t\tsideOffset={sideOffset}\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</PopoverPrimitive.Portal>\r\n\t);\r\n}\r\n\r\nfunction PopoverAnchor({\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n\treturn <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\r\n",
  "/components/ui/radio-group.tsx": "\"use client\";\r\n\r\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\";\r\nimport { CircleIcon } from \"lucide-react\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction RadioGroup({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof RadioGroupPrimitive.Root>) {\r\n\treturn (\r\n\t\t<RadioGroupPrimitive.Root\r\n\t\t\tdata-slot=\"radio-group\"\r\n\t\t\tclassName={cn(\"grid gap-3\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction RadioGroupItem({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof RadioGroupPrimitive.Item>) {\r\n\treturn (\r\n\t\t<RadioGroupPrimitive.Item\r\n\t\t\tdata-slot=\"radio-group-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"border-input text-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 aspect-square size-4 shrink-0 rounded-full border shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<RadioGroupPrimitive.Indicator\r\n\t\t\t\tdata-slot=\"radio-group-indicator\"\r\n\t\t\t\tclassName=\"relative flex items-center justify-center\"\r\n\t\t\t>\r\n\t\t\t\t<CircleIcon className=\"fill-primary absolute top-1/2 left-1/2 size-2 -translate-x-1/2 -translate-y-1/2\" />\r\n\t\t\t</RadioGroupPrimitive.Indicator>\r\n\t\t</RadioGroupPrimitive.Item>\r\n\t);\r\n}\r\n\r\nexport { RadioGroup, RadioGroupItem };\r\n",
  "/components/ui/select.tsx": "'use client';\r\n\r\nimport * as SelectPrimitive from '@radix-ui/react-select';\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Select({\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\r\n\treturn <SelectPrimitive.Root data-slot=\"select\" {...props} />;\r\n}\r\n\r\nfunction SelectGroup({\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\r\n\treturn <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\r\n}\r\n\r\nfunction SelectValue({\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\r\n\treturn <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\r\n}\r\n\r\nfunction SelectTrigger({\r\n\tclassName,\r\n\tsize = 'default',\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\r\n\tsize?: 'sm' | 'default';\r\n}) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Trigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-size={size}\r\n\t\t\tdata-slot=\"select-trigger\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<SelectPrimitive.Icon asChild>\r\n\t\t\t\t<ChevronDownIcon className=\"size-4 opacity-50\" />\r\n\t\t\t</SelectPrimitive.Icon>\r\n\t\t</SelectPrimitive.Trigger>\r\n\t);\r\n}\r\n\r\nfunction SelectContent({\r\n\tclassName,\r\n\tchildren,\r\n\tposition = 'popper',\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Portal>\r\n\t\t\t<SelectPrimitive.Content\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\r\n\t\t\t\t\tposition === 'popper' &&\r\n\t\t\t\t\t\t'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"select-content\"\r\n\t\t\t\tposition={position}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<SelectScrollUpButton />\r\n\t\t\t\t<SelectPrimitive.Viewport\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t'p-1',\r\n\t\t\t\t\t\tposition === 'popper' &&\r\n\t\t\t\t\t\t\t'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1',\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</SelectPrimitive.Viewport>\r\n\t\t\t\t<SelectScrollDownButton />\r\n\t\t\t</SelectPrimitive.Content>\r\n\t\t</SelectPrimitive.Portal>\r\n\t);\r\n}\r\n\r\nfunction SelectLabel({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Label\r\n\t\t\tclassName={cn('text-muted-foreground px-2 py-1.5 text-xs', className)}\r\n\t\t\tdata-slot=\"select-label\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SelectItem({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Item\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"select-item\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<SelectPrimitive.ItemIndicator>\r\n\t\t\t\t\t<CheckIcon className=\"size-4\" />\r\n\t\t\t\t</SelectPrimitive.ItemIndicator>\r\n\t\t\t</span>\r\n\t\t\t<SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n\t\t</SelectPrimitive.Item>\r\n\t);\r\n}\r\n\r\nfunction SelectSeparator({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Separator\r\n\t\t\tclassName={cn('bg-border pointer-events-none -mx-1 my-1 h-px', className)}\r\n\t\t\tdata-slot=\"select-separator\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.ScrollUpButton\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'flex cursor-default items-center justify-center py-1',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"select-scroll-up-button\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<ChevronUpIcon className=\"size-4\" />\r\n\t\t</SelectPrimitive.ScrollUpButton>\r\n\t);\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.ScrollDownButton\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'flex cursor-default items-center justify-center py-1',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"select-scroll-down-button\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<ChevronDownIcon className=\"size-4\" />\r\n\t\t</SelectPrimitive.ScrollDownButton>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tSelect,\r\n\tSelectContent,\r\n\tSelectGroup,\r\n\tSelectItem,\r\n\tSelectLabel,\r\n\tSelectScrollDownButton,\r\n\tSelectScrollUpButton,\r\n\tSelectSeparator,\r\n\tSelectTrigger,\r\n\tSelectValue,\r\n};\r\n",
  "/components/ui/separator.tsx": "'use client';\r\n\r\nimport * as SeparatorPrimitive from '@radix-ui/react-separator';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Separator({\r\n\tclassName,\r\n\torientation = 'horizontal',\r\n\tdecorative = true,\r\n\t...props\r\n}: React.ComponentProps<typeof SeparatorPrimitive.Root>) {\r\n\treturn (\r\n\t\t<SeparatorPrimitive.Root\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-border shrink-0 data-[orientation=horizontal]:h-px data-[orientation=horizontal]:w-full data-[orientation=vertical]:h-full data-[orientation=vertical]:w-px',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"separator\"\r\n\t\t\tdecorative={decorative}\r\n\t\t\torientation={orientation}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Separator };\r\n",
  "/components/ui/sheet.tsx": "'use client';\r\n\r\nimport * as SheetPrimitive from '@radix-ui/react-dialog';\r\nimport { XIcon } from 'lucide-react';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Sheet({ ...props }: React.ComponentProps<typeof SheetPrimitive.Root>) {\r\n\treturn <SheetPrimitive.Root data-slot=\"sheet\" {...props} />;\r\n}\r\n\r\nfunction SheetTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Trigger>) {\r\n\treturn <SheetPrimitive.Trigger data-slot=\"sheet-trigger\" {...props} />;\r\n}\r\n\r\nfunction SheetClose({\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Close>) {\r\n\treturn <SheetPrimitive.Close data-slot=\"sheet-close\" {...props} />;\r\n}\r\n\r\nfunction SheetPortal({\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Portal>) {\r\n\treturn <SheetPrimitive.Portal data-slot=\"sheet-portal\" {...props} />;\r\n}\r\n\r\nfunction SheetOverlay({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Overlay>) {\r\n\treturn (\r\n\t\t<SheetPrimitive.Overlay\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"sheet-overlay\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SheetContent({\r\n\tclassName,\r\n\tchildren,\r\n\tside = 'right',\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Content> & {\r\n\tside?: 'top' | 'right' | 'bottom' | 'left';\r\n}) {\r\n\treturn (\r\n\t\t<SheetPortal>\r\n\t\t\t<SheetOverlay />\r\n\t\t\t<SheetPrimitive.Content\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out fixed z-50 flex flex-col gap-4 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500',\r\n\t\t\t\t\tside === 'right' &&\r\n\t\t\t\t\t\t'data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right inset-y-0 right-0 h-full w-3/4 border-l sm:max-w-sm',\r\n\t\t\t\t\tside === 'left' &&\r\n\t\t\t\t\t\t'data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left inset-y-0 left-0 h-full w-3/4 border-r sm:max-w-sm',\r\n\t\t\t\t\tside === 'top' &&\r\n\t\t\t\t\t\t'data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top inset-x-0 top-0 h-auto border-b',\r\n\t\t\t\t\tside === 'bottom' &&\r\n\t\t\t\t\t\t'data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom inset-x-0 bottom-0 h-auto border-t',\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"sheet-content\"\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t\t<SheetPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-secondary absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none\">\r\n\t\t\t\t\t<XIcon className=\"size-4\" />\r\n\t\t\t\t\t<span className=\"sr-only\">Close</span>\r\n\t\t\t\t</SheetPrimitive.Close>\r\n\t\t\t</SheetPrimitive.Content>\r\n\t\t</SheetPortal>\r\n\t);\r\n}\r\n\r\nfunction SheetHeader({ className, ...props }: React.ComponentProps<'div'>) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={cn('flex flex-col gap-1.5 p-4', className)}\r\n\t\t\tdata-slot=\"sheet-header\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SheetFooter({ className, ...props }: React.ComponentProps<'div'>) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={cn('mt-auto flex flex-col gap-2 p-4', className)}\r\n\t\t\tdata-slot=\"sheet-footer\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SheetTitle({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Title>) {\r\n\treturn (\r\n\t\t<SheetPrimitive.Title\r\n\t\t\tclassName={cn('text-foreground font-semibold', className)}\r\n\t\t\tdata-slot=\"sheet-title\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SheetDescription({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SheetPrimitive.Description>) {\r\n\treturn (\r\n\t\t<SheetPrimitive.Description\r\n\t\t\tclassName={cn('text-muted-foreground text-sm', className)}\r\n\t\t\tdata-slot=\"sheet-description\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tSheet,\r\n\tSheetTrigger,\r\n\tSheetClose,\r\n\tSheetContent,\r\n\tSheetHeader,\r\n\tSheetFooter,\r\n\tSheetTitle,\r\n\tSheetDescription,\r\n};\r\n",
  "/components/ui/skeleton.tsx": "import { cn } from '@/lib/utils';\r\n\r\nfunction Skeleton({ className, ...props }: React.ComponentProps<'div'>) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName={cn('bg-accent animate-pulse rounded-md', className)}\r\n\t\t\tdata-slot=\"skeleton\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Skeleton };\r\n",
  "/components/ui/switch.tsx": "'use client';\r\n\r\nimport * as SwitchPrimitive from '@radix-ui/react-switch';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Switch({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\r\n\treturn (\r\n\t\t<SwitchPrimitive.Root\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"switch\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<SwitchPrimitive.Thumb\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0',\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"switch-thumb\"\r\n\t\t\t/>\r\n\t\t</SwitchPrimitive.Root>\r\n\t);\r\n}\r\n\r\nexport { Switch };\r\n",
  "/components/ui/tabs.tsx": "'use client';\r\n\r\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Tabs({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.Root\r\n\t\t\tclassName={cn('flex flex-col gap-2', className)}\r\n\t\t\tdata-slot=\"tabs\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction TabsList({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.List\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"tabs-list\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction TabsTrigger({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.Trigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"tabs-trigger\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction TabsContent({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.Content\r\n\t\t\tclassName={cn('flex-1 outline-none', className)}\r\n\t\t\tdata-slot=\"tabs-content\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\r\n",
  "/components/ui/tooltip.tsx": "'use client';\r\n\r\nimport * as TooltipPrimitive from '@radix-ui/react-tooltip';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction TooltipProvider({\r\n\tdelayDuration = 0,\r\n\t...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Provider>) {\r\n\treturn (\r\n\t\t<TooltipPrimitive.Provider\r\n\t\t\tdata-slot=\"tooltip-provider\"\r\n\t\t\tdelayDuration={delayDuration}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction Tooltip({\r\n\t...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Root>) {\r\n\treturn (\r\n\t\t<TooltipProvider>\r\n\t\t\t<TooltipPrimitive.Root data-slot=\"tooltip\" {...props} />\r\n\t\t</TooltipProvider>\r\n\t);\r\n}\r\n\r\nfunction TooltipTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Trigger>) {\r\n\treturn <TooltipPrimitive.Trigger data-slot=\"tooltip-trigger\" {...props} />;\r\n}\r\n\r\nfunction TooltipContent({\r\n\tclassName,\r\n\tsideOffset = 0,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof TooltipPrimitive.Content>) {\r\n\treturn (\r\n\t\t<TooltipPrimitive.Portal>\r\n\t\t\t<TooltipPrimitive.Content\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-primary text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-fit origin-(--radix-tooltip-content-transform-origin) rounded-md px-3 py-1.5 text-xs text-balance',\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"tooltip-content\"\r\n\t\t\t\tsideOffset={sideOffset}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t\t<TooltipPrimitive.Arrow className=\"bg-primary fill-primary z-50 size-2.5 translate-y-[calc(-50%_-_2px)] rotate-45 rounded-[2px]\" />\r\n\t\t\t</TooltipPrimitive.Content>\r\n\t\t</TooltipPrimitive.Portal>\r\n\t);\r\n}\r\n\r\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider };\r\n",
  "/hooks/use-mobile.ts": "import * as React from 'react';\r\n\r\nconst MOBILE_BREAKPOINT = 768;\r\n\r\nexport function useIsMobile() {\r\n\tconst [isMobile, setIsMobile] = React.useState<boolean | undefined>(\r\n\t\tundefined,\r\n\t);\r\n\r\n\tReact.useEffect(() => {\r\n\t\tconst mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`);\r\n\t\tconst onChange = () => {\r\n\t\t\tsetIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\r\n\t\t};\r\n\t\tmql.addEventListener('change', onChange);\r\n\t\tsetIsMobile(window.innerWidth < MOBILE_BREAKPOINT);\r\n\t\treturn () => mql.removeEventListener('change', onChange);\r\n\t}, []);\r\n\r\n\treturn !!isMobile;\r\n}\r\n",
  "/lib/utils.ts": "import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n\treturn twMerge(clsx(inputs));\r\n}\r\n"
}