{
  "/components/ui/menubar.tsx": "'use client';\r\n\r\nimport * as MenubarPrimitive from '@radix-ui/react-menubar';\r\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Menubar({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Root>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Root\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-background flex h-9 items-center gap-1 rounded-md border p-1 shadow-xs',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarMenu({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\r\n\treturn <MenubarPrimitive.Menu data-slot=\"menubar-menu\" {...props} />;\r\n}\r\n\r\nfunction MenubarGroup({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\r\n\treturn <MenubarPrimitive.Group data-slot=\"menubar-group\" {...props} />;\r\n}\r\n\r\nfunction MenubarPortal({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\r\n\treturn <MenubarPrimitive.Portal data-slot=\"menubar-portal\" {...props} />;\r\n}\r\n\r\nfunction MenubarRadioGroup({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.RadioGroup data-slot=\"menubar-radio-group\" {...props} />\r\n\t);\r\n}\r\n\r\nfunction MenubarTrigger({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Trigger>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Trigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex items-center rounded-sm px-2 py-1 text-sm font-medium outline-hidden select-none',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-trigger\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarContent({\r\n\tclassName,\r\n\talign = 'start',\r\n\talignOffset = -4,\r\n\tsideOffset = 8,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Content>) {\r\n\treturn (\r\n\t\t<MenubarPortal>\r\n\t\t\t<MenubarPrimitive.Content\r\n\t\t\t\talign={align}\r\n\t\t\t\talignOffset={alignOffset}\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[12rem] origin-(--radix-menubar-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-md',\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"menubar-content\"\r\n\t\t\t\tsideOffset={sideOffset}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</MenubarPortal>\r\n\t);\r\n}\r\n\r\nfunction MenubarItem({\r\n\tclassName,\r\n\tinset,\r\n\tvariant = 'default',\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Item> & {\r\n\tinset?: boolean;\r\n\tvariant?: 'default' | 'destructive';\r\n}) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Item\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-slot=\"menubar-item\"\r\n\t\t\tdata-variant={variant}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarCheckboxItem({\r\n\tclassName,\r\n\tchildren,\r\n\tchecked,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.CheckboxItem>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.CheckboxItem\r\n\t\t\tchecked={checked}\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-checkbox-item\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<MenubarPrimitive.ItemIndicator>\r\n\t\t\t\t\t<CheckIcon className=\"size-4\" />\r\n\t\t\t\t</MenubarPrimitive.ItemIndicator>\r\n\t\t\t</span>\r\n\t\t\t{children}\r\n\t\t</MenubarPrimitive.CheckboxItem>\r\n\t);\r\n}\r\n\r\nfunction MenubarRadioItem({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.RadioItem>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.RadioItem\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-radio-item\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<MenubarPrimitive.ItemIndicator>\r\n\t\t\t\t\t<CircleIcon className=\"size-2 fill-current\" />\r\n\t\t\t\t</MenubarPrimitive.ItemIndicator>\r\n\t\t\t</span>\r\n\t\t\t{children}\r\n\t\t</MenubarPrimitive.RadioItem>\r\n\t);\r\n}\r\n\r\nfunction MenubarLabel({\r\n\tclassName,\r\n\tinset,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Label> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Label\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'px-2 py-1.5 text-sm font-medium data-[inset]:pl-8',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-slot=\"menubar-label\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarSeparator({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Separator>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.Separator\r\n\t\t\tclassName={cn('bg-border -mx-1 my-1 h-px', className)}\r\n\t\t\tdata-slot=\"menubar-separator\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarShortcut({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<'span'>) {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'text-muted-foreground ml-auto text-xs tracking-widest',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-shortcut\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarSub({\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\r\n\treturn <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />;\r\n}\r\n\r\nfunction MenubarSubTrigger({\r\n\tclassName,\r\n\tinset,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.SubTrigger> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.SubTrigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-none select-none data-[inset]:pl-8',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-slot=\"menubar-sub-trigger\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<ChevronRightIcon className=\"ml-auto h-4 w-4\" />\r\n\t\t</MenubarPrimitive.SubTrigger>\r\n\t);\r\n}\r\n\r\nfunction MenubarSubContent({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof MenubarPrimitive.SubContent>) {\r\n\treturn (\r\n\t\t<MenubarPrimitive.SubContent\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-menubar-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"menubar-sub-content\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tMenubar,\r\n\tMenubarPortal,\r\n\tMenubarMenu,\r\n\tMenubarTrigger,\r\n\tMenubarContent,\r\n\tMenubarGroup,\r\n\tMenubarSeparator,\r\n\tMenubarLabel,\r\n\tMenubarItem,\r\n\tMenubarShortcut,\r\n\tMenubarCheckboxItem,\r\n\tMenubarRadioGroup,\r\n\tMenubarRadioItem,\r\n\tMenubarSub,\r\n\tMenubarSubTrigger,\r\n\tMenubarSubContent,\r\n};\r\n",
  "/components/ui/select.tsx": "'use client';\r\n\r\nimport * as SelectPrimitive from '@radix-ui/react-select';\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Select({\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\r\n\treturn <SelectPrimitive.Root data-slot=\"select\" {...props} />;\r\n}\r\n\r\nfunction SelectGroup({\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\r\n\treturn <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\r\n}\r\n\r\nfunction SelectValue({\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\r\n\treturn <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\r\n}\r\n\r\nfunction SelectTrigger({\r\n\tclassName,\r\n\tsize = 'default',\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\r\n\tsize?: 'sm' | 'default';\r\n}) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Trigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-size={size}\r\n\t\t\tdata-slot=\"select-trigger\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<SelectPrimitive.Icon asChild>\r\n\t\t\t\t<ChevronDownIcon className=\"size-4 opacity-50\" />\r\n\t\t\t</SelectPrimitive.Icon>\r\n\t\t</SelectPrimitive.Trigger>\r\n\t);\r\n}\r\n\r\nfunction SelectContent({\r\n\tclassName,\r\n\tchildren,\r\n\tposition = 'popper',\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Portal>\r\n\t\t\t<SelectPrimitive.Content\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\r\n\t\t\t\t\tposition === 'popper' &&\r\n\t\t\t\t\t\t'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"select-content\"\r\n\t\t\t\tposition={position}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t<SelectScrollUpButton />\r\n\t\t\t\t<SelectPrimitive.Viewport\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t'p-1',\r\n\t\t\t\t\t\tposition === 'popper' &&\r\n\t\t\t\t\t\t\t'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1',\r\n\t\t\t\t\t)}\r\n\t\t\t\t>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</SelectPrimitive.Viewport>\r\n\t\t\t\t<SelectScrollDownButton />\r\n\t\t\t</SelectPrimitive.Content>\r\n\t\t</SelectPrimitive.Portal>\r\n\t);\r\n}\r\n\r\nfunction SelectLabel({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Label\r\n\t\t\tclassName={cn('text-muted-foreground px-2 py-1.5 text-xs', className)}\r\n\t\t\tdata-slot=\"select-label\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SelectItem({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Item\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"select-item\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<SelectPrimitive.ItemIndicator>\r\n\t\t\t\t\t<CheckIcon className=\"size-4\" />\r\n\t\t\t\t</SelectPrimitive.ItemIndicator>\r\n\t\t\t</span>\r\n\t\t\t<SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n\t\t</SelectPrimitive.Item>\r\n\t);\r\n}\r\n\r\nfunction SelectSeparator({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.Separator\r\n\t\t\tclassName={cn('bg-border pointer-events-none -mx-1 my-1 h-px', className)}\r\n\t\t\tdata-slot=\"select-separator\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.ScrollUpButton\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'flex cursor-default items-center justify-center py-1',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"select-scroll-up-button\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<ChevronUpIcon className=\"size-4\" />\r\n\t\t</SelectPrimitive.ScrollUpButton>\r\n\t);\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\r\n\treturn (\r\n\t\t<SelectPrimitive.ScrollDownButton\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'flex cursor-default items-center justify-center py-1',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"select-scroll-down-button\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<ChevronDownIcon className=\"size-4\" />\r\n\t\t</SelectPrimitive.ScrollDownButton>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tSelect,\r\n\tSelectContent,\r\n\tSelectGroup,\r\n\tSelectItem,\r\n\tSelectLabel,\r\n\tSelectScrollDownButton,\r\n\tSelectScrollUpButton,\r\n\tSelectSeparator,\r\n\tSelectTrigger,\r\n\tSelectValue,\r\n};\r\n",
  "/components/ui/switch.tsx": "'use client';\r\n\r\nimport * as SwitchPrimitive from '@radix-ui/react-switch';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Switch({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\r\n\treturn (\r\n\t\t<SwitchPrimitive.Root\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.15rem] w-8 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"switch\"\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<SwitchPrimitive.Thumb\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0',\r\n\t\t\t\t)}\r\n\t\t\t\tdata-slot=\"switch-thumb\"\r\n\t\t\t/>\r\n\t\t</SwitchPrimitive.Root>\r\n\t);\r\n}\r\n\r\nexport { Switch };\r\n",
  "/components/ui/tabs.tsx": "'use client';\r\n\r\nimport * as TabsPrimitive from '@radix-ui/react-tabs';\r\nimport type * as React from 'react';\r\n\r\nimport { cn } from '@/lib/utils';\r\n\r\nfunction Tabs({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.Root\r\n\t\t\tclassName={cn('flex flex-col gap-2', className)}\r\n\t\t\tdata-slot=\"tabs\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction TabsList({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.List\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]',\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"tabs-list\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction TabsTrigger({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.Trigger\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tdata-slot=\"tabs-trigger\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction TabsContent({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\r\n\treturn (\r\n\t\t<TabsPrimitive.Content\r\n\t\t\tclassName={cn('flex-1 outline-none', className)}\r\n\t\t\tdata-slot=\"tabs-content\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\r\n",
  "/lib/utils.ts": "import { type ClassValue, clsx } from 'clsx';\r\nimport { twMerge } from 'tailwind-merge';\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n\treturn twMerge(clsx(inputs));\r\n}\r\n"
}