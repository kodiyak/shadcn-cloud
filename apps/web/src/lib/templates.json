[
  {
    "title": "Button",
    "description": "Used to trigger an action or event, such as submitting a form, displaying a dialog or sending a request.",
    "features": [
      "A wrapper around native HTML <button>, supports all HTMLButtonElement properties, methods and events",
      "Different variants, sizes and border radiuses",
      "Pending state animation",
      "Respects reduce motion settings",
      "Supports icons, loading spinner and custom content"
    ],
    "references": [
      {
        "title": "llms.txt",
        "href": "https://llms.ai/docs/components/button"
      },
      {
        "title": "MDN Reference",
        "href": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"
      }
    ],
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      },
      {
        "title": "Tailwind CSS",
        "icon": "tailwindcss",
        "href": "https://tailwindcss.com"
      },
      {
        "title": "Motion",
        "icon": "motion",
        "href": "https://motion.dev/one"
      },
      {
        "title": "cva",
        "icon": "cva",
        "href": "https://cva-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Button\r\n\r\nUsed to trigger an action or event, such as submitting a form, displaying a dialog, or sending a request.\r\n\r\n## Features\r\n\r\n- A wrapper around native HTML `<button>`\r\n- Different variants, sizes, and border radiuses\r\n- Pending state animation\r\n- Respects reduce motion settings\r\n- Supports icons, loading spinner, and custom content\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Button } from \"./index\";\r\n\r\n<Button>Click me</Button>\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />\r\n\r\n## Props\r\n\r\n<TypeTable\r\n  type={{\r\n    variant: {\r\n      description: 'Button variants',\r\n      type: '\"default\" | \"primary\" | \"secondary\" | \"destructive\" | \"outline\" | \"ghost\" | \"link\"',\r\n      default: 'default',\r\n    },\r\n    size: {\r\n      description: 'Button sizes',\r\n      type: '\"default\" | \"sm\" | \"lg\"',\r\n      default: 'default',\r\n    },\r\n    disabled: {\r\n      description: 'Disable the button',\r\n      type: 'boolean',\r\n      default: 'false',\r\n    },\r\n    className: {\r\n      description: 'Additional CSS classes',\r\n      type: 'string',\r\n    },\r\n  }}\r\n/>",
      "/index.tsx": "import { Slot } from '@radix-ui/react-slot';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport type * as React from 'react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst buttonVariants = cva(\r\n\tcn(\r\n\t\t'inline-flex font-sans items-center cursor-default justify-center gap-2 whitespace-nowrap text-sm font-medium transition-all',\r\n\t\t'disabled:bg-accent disabled:from-accent disabled:to-accent disabled:opacity-40 disabled:text-muted-foreground/50 disabled:cursor-not-allowed',\r\n\t\t'shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\r\n\t\t'[&_svg]:pointer-events-none [&_svg]:shrink-0',\r\n\t),\r\n\t{\r\n\t\tvariants: {\r\n\t\t\tvariant: {\r\n\t\t\t\tdefault: 'bg-foreground text-background hover:bg-foreground/90',\r\n\t\t\t\tprimary: 'bg-primary text-primary-foreground hover:bg-primary/90',\r\n\t\t\t\tdestructive:\r\n\t\t\t\t\t'bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60',\r\n\t\t\t\toutline:\r\n\t\t\t\t\t'border bg-background/50 text-muted-foreground hover:bg-muted/35 hover:text-foreground',\r\n\t\t\t\tsecondary:\r\n\t\t\t\t\t'border bg-background/50 bg-gradient-to-b from-accent/10 to-background text-muted-foreground hover:text-foreground',\r\n\t\t\t\tghost: cn(\r\n\t\t\t\t\t'text-muted-foreground hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/30',\r\n\t\t\t\t\t'data-[state=open]:bg-accent data-[state=open]:text-foreground',\r\n\t\t\t\t\t'dark:data-[state=open]:bg-accent/40 dark:data-[state=open]:text-foreground',\r\n\t\t\t\t),\r\n\t\t\t\t'ghost-purple':\r\n\t\t\t\t\t'text-purple-400 border border-purple-500/20 hover:bg-purple-500/10 hover:text-purple-500 hover:border-purple-500/40',\r\n\t\t\t\t'destructive-ghost':\r\n\t\t\t\t\t'text-muted-foreground hover:bg-accent hover:text-destructive dark:hover:bg-accent/30',\r\n\t\t\t\t'success-ghost':\r\n\t\t\t\t\t'text-muted-foreground hover:bg-accent hover:text-success dark:hover:bg-accent/30',\r\n\t\t\t\t'success-outline':\r\n\t\t\t\t\t'border border-success/20 bg-background/50 text-success hover:bg-success/10 hover:text-success-foreground',\r\n\t\t\t\tlink: 'text-muted-foreground underline-offset-4 hover:underline hover:text-foreground',\r\n\t\t\t\tcommand: cn(\r\n\t\t\t\t\t'border-input data-[placeholder]:text-muted-foreground',\r\n\t\t\t\t\t\"[&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 \",\r\n\t\t\t\t\t'aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive',\r\n\t\t\t\t\t'dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 border bg-transparent px-3 py-2 text-sm whitespace-nowrap',\r\n\t\t\t\t\t'transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50',\r\n\t\t\t\t\t'*:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center',\r\n\t\t\t\t\t\"*:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\t),\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\tdefault: `h-12 rounded-xl px-4 py-2 has-[>svg]:px-3 [&_svg:not([class*='size-'])]:size-5`,\r\n\t\t\t\tsm: `h-10 rounded-lg gap-1.5 px-3 has-[>svg]:px-2.5 [&_svg:not([class*='size-'])]:size-5`,\r\n\t\t\t\txs: `h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5 [&_svg:not([class*='size-'])]:size-4`,\r\n\t\t\t\txxs: `h-8 text-xs rounded gap-1 p-0 h-auto [&_svg:not([class*='size-'])]:size-3`,\r\n\t\t\t\tlg: `h-10 rounded-xl px-6 has-[>svg]:px-4 [&_svg:not([class*='size-'])]:size-4`,\r\n\t\t\t\ticon: 'size-9 rounded-lg [&_svg]:size-5',\r\n\t\t\t\t'icon-sm': 'size-8 rounded [&_svg]:size-5',\r\n\t\t\t\t'icon-xs': 'size-5 rounded [&_svg]:size-3.5',\r\n\t\t\t\t'icon-xxs': 'size-4 rounded [&_svg]:size-3',\r\n\t\t\t},\r\n\t\t\trounded: {\r\n\t\t\t\ttrue: 'rounded-full',\r\n\t\t\t\tfalse: '',\r\n\t\t\t},\r\n\t\t},\r\n\t\tdefaultVariants: {\r\n\t\t\tvariant: 'default',\r\n\t\t\tsize: 'default',\r\n\t\t\trounded: false,\r\n\t\t},\r\n\t},\r\n);\r\n\r\nexport type ButtonProps = React.ComponentProps<'button'> &\r\n\tVariantProps<typeof buttonVariants> & {\r\n\t\tasChild?: boolean;\r\n\t};\r\n\r\nfunction Button({\r\n\tclassName,\r\n\tvariant,\r\n\tsize,\r\n\tasChild = false,\r\n\t...props\r\n}: ButtonProps) {\r\n\tconst Comp = asChild ? Slot : 'button';\r\n\r\n\treturn (\r\n\t\t<Comp\r\n\t\t\tclassName={cn(buttonVariants({ variant, size, className }))}\r\n\t\t\tdata-slot=\"button\"\r\n\t\t\ttype={'button'}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Button\",\r\n  \"description\": \"Used to trigger an action or event, such as submitting a form, displaying a dialog or sending a request.\",\r\n  \"features\": [\r\n    \"A wrapper around native HTML <button>, supports all HTMLButtonElement properties, methods and events\",\r\n    \"Different variants, sizes and border radiuses\",\r\n    \"Pending state animation\",\r\n    \"Respects reduce motion settings\",\r\n    \"Supports icons, loading spinner and custom content\"\r\n  ],\r\n  \"references\": [\r\n    {\r\n      \"title\": \"llms.txt\",\r\n      \"href\": \"https://llms.ai/docs/components/button\"\r\n    },\r\n    {\r\n      \"title\": \"MDN Reference\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button\"\r\n    }\r\n  ],\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    },\r\n    {\r\n      \"title\": \"Tailwind CSS\",\r\n      \"icon\": \"tailwindcss\",\r\n      \"href\": \"https://tailwindcss.com\"\r\n    },\r\n    {\r\n      \"title\": \"Motion\",\r\n      \"icon\": \"motion\",\r\n      \"href\": \"https://motion.dev/one\"\r\n    },\r\n    {\r\n      \"title\": \"cva\",\r\n      \"icon\": \"cva\",\r\n      \"href\": \"https://cva-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Button } from '/index.tsx';\r\n\r\nexport default function MinimalPreview() {\r\n\treturn (\r\n\t\t<div className=\"flex flex-col\">\r\n\t\t\t<Button>Minimal Button</Button>\r\n\t\t</div>\r\n\t);\r\n}\r\n",
      "/previews/motion-button.tsx": "import { motion } from 'motion/react';\r\nimport { useState } from 'react';\r\nimport { Button } from '/index.tsx';\r\n\r\nconst MButton = motion.create(Button);\r\n\r\nexport default function MotionButton() {\r\n\tconst [count, setCount] = useState(0);\r\n\r\n\treturn (\r\n\t\t<MButton\r\n\t\t\tanimate={{ opacity: 1, scale: 1, filter: 'blur(0px)' }}\r\n\t\t\tinitial={{ opacity: 0, scale: 0.9, filter: 'blur(5px)' }}\r\n\t\t\tonClick={() => {\r\n\t\t\t\tsetCount((old) => old + 2);\r\n\t\t\t}}\r\n\t\t\twhileTap={{ scale: 0.9, filter: 'blur(5px)' }}\r\n\t\t>\r\n\t\t\tMy Count Button: {count}\r\n\t\t</MButton>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Card",
    "description": "Displays a card with header, content, and footer.",
    "features": [
      "Forms, buttons, links and more..."
    ],
    "references": [
      {
        "title": "llms.txt",
        "href": "https://llms.ai/docs/components/card"
      },
      {
        "title": "MDN Reference",
        "href": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/card"
      }
    ],
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Tailwind CSS",
        "icon": "tailwindcss",
        "href": "https://tailwindcss.com"
      }
    ],
    "files": {
      "/index.mdx": "# Card\r\n\r\nDisplays a card with header, content, and footer.\r\n\r\n## Features\r\n\r\n- Forms, buttons, links, and more...\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport Card from \"./index\";\r\n\r\n<Card>\r\n  <h1>Title</h1>\r\n  <p>Description</p>\r\n</Card>\r\n```\r\n\r\n## Previews\r\n\r\n### Main Preview\r\n<Preview path={'/previews/main.tsx'} />",
      "/index.tsx": "import type { PropsWithChildren } from \"react\";\r\n\r\nexport default function Card({ children }: PropsWithChildren) {\r\n\treturn <div className=\"card\">{children}</div>;\r\n}\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Card\",\r\n  \"description\": \"Displays a card with header, content, and footer.\",\r\n  \"features\": [\r\n    \"Forms, buttons, links and more...\"\r\n  ],\r\n  \"references\": [\r\n    {\r\n      \"title\": \"llms.txt\",\r\n      \"href\": \"https://llms.ai/docs/components/card\"\r\n    },\r\n    {\r\n      \"title\": \"MDN Reference\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/card\"\r\n    }\r\n  ],\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Tailwind CSS\",\r\n      \"icon\": \"tailwindcss\",\r\n      \"href\": \"https://tailwindcss.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/main.tsx": "import Card from '..';\r\n\r\nexport default function MainPreview() {\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<h1>Title</h1>\r\n\t\t\t<p>Description</p>\r\n\t\t</Card>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Checkbox",
    "description": "An checkbox component for text entry, supporting various types and styles.",
    "features": [
      "Supports various checkbox types (text, password, email, etc.)",
      "Customizable styles using Tailwind CSS",
      "Accessible with ARIA attributes",
      "Supports validation and error handling",
      "Integrates with React Hook Form for form management"
    ],
    "references": [
      {
        "title": "llms.txt",
        "href": "https://llms.ai/docs/components/checkbox"
      },
      {
        "title": "MDN Reference",
        "href": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/checkbox"
      }
    ],
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      },
      {
        "title": "Tailwind CSS",
        "icon": "tailwindcss",
        "href": "https://tailwindcss.com"
      },
      {
        "title": "Motion",
        "icon": "motion",
        "href": "https://motion.dev/one"
      },
      {
        "title": "cva",
        "icon": "cva",
        "href": "https://cva-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Checkbox\r\n\r\nAn checkbox component for text entry, supporting various types and styles.\r\n\r\n## Features\r\n\r\n- Supports various checkbox types (text, password, email, etc.)\r\n- Customizable styles using Tailwind CSS\r\n- Accessible with ARIA attributes\r\n- Supports validation and error handling\r\n- Integrates with React Hook Form for form management\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport Checkbox from \"./index\";\r\n\r\n<Checkbox>Accept terms</Checkbox>\r\n```\r\n\r\n## Previews\r\n\r\n### Main Preview\r\n<Preview path={'/previews/main.tsx'} />\r\n",
      "/index.tsx": "import type { InputHTMLAttributes } from 'react';\r\n\r\nexport default function Checkbox({\r\n\tchildren,\r\n\t...props\r\n}: InputHTMLAttributes<HTMLInputElement>) {\r\n\treturn (\r\n\t\t<label className=\"flex items-center gap-1 text-sm\">\r\n\t\t\t<input type=\"checkbox\" {...props} />\r\n\t\t\t<span className=\"text-muted-foreground font-medium\">{children}</span>\r\n\t\t</label>\r\n\t);\r\n}\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Checkbox\",\r\n  \"description\": \"An checkbox component for text entry, supporting various types and styles.\",\r\n  \"features\": [\r\n    \"Supports various checkbox types (text, password, email, etc.)\",\r\n    \"Customizable styles using Tailwind CSS\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Supports validation and error handling\",\r\n    \"Integrates with React Hook Form for form management\"\r\n  ],\r\n  \"references\": [\r\n    {\r\n      \"title\": \"llms.txt\",\r\n      \"href\": \"https://llms.ai/docs/components/checkbox\"\r\n    },\r\n    {\r\n      \"title\": \"MDN Reference\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/checkbox\"\r\n    }\r\n  ],\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    },\r\n    {\r\n      \"title\": \"Tailwind CSS\",\r\n      \"icon\": \"tailwindcss\",\r\n      \"href\": \"https://tailwindcss.com\"\r\n    },\r\n    {\r\n      \"title\": \"Motion\",\r\n      \"icon\": \"motion\",\r\n      \"href\": \"https://motion.dev/one\"\r\n    },\r\n    {\r\n      \"title\": \"cva\",\r\n      \"icon\": \"cva\",\r\n      \"href\": \"https://cva-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/main.tsx": "import Checkbox from '..';\r\n\r\nexport default function MainPreview() {\r\n\treturn (\r\n\t\t<div className=\"flex flex-col\">\r\n\t\t\t<Checkbox>Accept terms</Checkbox>\r\n\t\t</div>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Input",
    "description": "An input component for text entry, supporting various types and styles.",
    "features": [
      "Supports various input types (text, password, email, etc.)",
      "Customizable styles using Tailwind CSS",
      "Accessible with ARIA attributes",
      "Supports validation and error handling",
      "Integrates with React Hook Form for form management"
    ],
    "references": [
      {
        "title": "llms.txt",
        "href": "https://llms.ai/docs/components/input"
      },
      {
        "title": "MDN Reference",
        "href": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"
      }
    ],
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      },
      {
        "title": "Tailwind CSS",
        "icon": "tailwindcss",
        "href": "https://tailwindcss.com"
      },
      {
        "title": "Motion",
        "icon": "motion",
        "href": "https://motion.dev/one"
      },
      {
        "title": "cva",
        "icon": "cva",
        "href": "https://cva-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Input\r\n\r\nAn input component for text entry, supporting various types and styles.\r\n\r\n## Features\r\n\r\n- Supports various input types (text, password, email, etc.)\r\n- Customizable styles using Tailwind CSS\r\n- Accessible with ARIA attributes\r\n- Supports validation and error handling\r\n- Integrates with React Hook Form for form management\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport Input from \"./index\";\r\n\r\n<Input placeholder=\"Type here\" />\r\n```\r\n\r\n## Previews\r\n\r\n### Main Preview\r\n<Preview path={'/previews/main.tsx'} />",
      "/index.tsx": "import type { InputHTMLAttributes } from \"react\";\r\n\r\nexport default function Input(props: InputHTMLAttributes<HTMLInputElement>) {\r\n\treturn <input {...props} />;\r\n}\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Input\",\r\n  \"description\": \"An input component for text entry, supporting various types and styles.\",\r\n  \"features\": [\r\n    \"Supports various input types (text, password, email, etc.)\",\r\n    \"Customizable styles using Tailwind CSS\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Supports validation and error handling\",\r\n    \"Integrates with React Hook Form for form management\"\r\n  ],\r\n  \"references\": [\r\n    {\r\n      \"title\": \"llms.txt\",\r\n      \"href\": \"https://llms.ai/docs/components/input\"\r\n    },\r\n    {\r\n      \"title\": \"MDN Reference\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input\"\r\n    }\r\n  ],\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    },\r\n    {\r\n      \"title\": \"Tailwind CSS\",\r\n      \"icon\": \"tailwindcss\",\r\n      \"href\": \"https://tailwindcss.com\"\r\n    },\r\n    {\r\n      \"title\": \"Motion\",\r\n      \"icon\": \"motion\",\r\n      \"href\": \"https://motion.dev/one\"\r\n    },\r\n    {\r\n      \"title\": \"cva\",\r\n      \"icon\": \"cva\",\r\n      \"href\": \"https://cva-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/main.tsx": "import Input from '..';\r\n\r\nexport default function MainPreview() {\r\n\treturn (\r\n\t\t<div className=\"flex flex-col\">\r\n\t\t\t<Input placeholder=\"Type here\" />\r\n\t\t</div>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Kibo Avatar Stack",
    "description": "Avatar stack component for React, built with Radix UI.",
    "features": [
      "Displays a stack of avatars",
      "Supports fallback initials",
      "Customizable avatar images",
      "Responsive design"
    ],
    "author": "kibo",
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      }
    ],
    "files": {
      "/index.tsx": "import { Children, type ReactNode } from \"react\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport type AvatarStackProps = {\r\n\tchildren: ReactNode;\r\n\tclassName?: string;\r\n\tanimate?: boolean;\r\n\tsize?: number;\r\n};\r\nexport const AvatarStack = ({\r\n\tchildren,\r\n\tclassName,\r\n\tanimate = false,\r\n\tsize = 40,\r\n\t...props\r\n}: AvatarStackProps) => (\r\n\t<div\r\n\t\tclassName={cn(\r\n\t\t\t\"-space-x-1 flex items-center\",\r\n\t\t\tanimate && \"hover:space-x-0 [&>*]:transition-all\",\r\n\t\t\tclassName,\r\n\t\t)}\r\n\t\t{...props}\r\n\t>\r\n\t\t{Children.map(children, (child, index) => {\r\n\t\t\tif (!child) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t\"size-full shrink-0 overflow-hidden rounded-full\",\r\n\t\t\t\t\t\t'[&_[data-slot=\"avatar\"]]:size-full',\r\n\t\t\t\t\t\tclassName,\r\n\t\t\t\t\t)}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: size,\r\n\t\t\t\t\t\theight: size,\r\n\t\t\t\t\t\tmaskImage: index\r\n\t\t\t\t\t\t\t? `radial-gradient(circle ${size / 2}px at -${size / 4 + size / 10}px 50%, transparent 99%, white 100%)`\r\n\t\t\t\t\t\t\t: \"\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{child}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t})}\r\n\t</div>\r\n);\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Kibo Avatar Stack\",\r\n  \"description\": \"Avatar stack component for React, built with Radix UI.\",\r\n  \"features\": [\r\n    \"Displays a stack of avatars\",\r\n    \"Supports fallback initials\",\r\n    \"Customizable avatar images\",\r\n    \"Responsive design\"\r\n  ],\r\n  \"author\": \"kibo\",\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\r\nimport { AvatarStack } from \"..\";\r\n\r\nexport default function MinimalPreview() {\r\n\treturn (\r\n\t\t<AvatarStack>\r\n\t\t\t<Avatar>\r\n\t\t\t\t<AvatarImage src=\"https://github.com/haydenbleasel.png\" />\r\n\t\t\t\t<AvatarFallback>HB</AvatarFallback>\r\n\t\t\t</Avatar>\r\n\t\t\t<Avatar>\r\n\t\t\t\t<AvatarImage src=\"https://github.com/shadcn.png\" />\r\n\t\t\t\t<AvatarFallback>CN</AvatarFallback>\r\n\t\t\t</Avatar>\r\n\t\t\t<Avatar>\r\n\t\t\t\t<AvatarImage src=\"https://github.com/leerob.png\" />\r\n\t\t\t\t<AvatarFallback>LR</AvatarFallback>\r\n\t\t\t</Avatar>\r\n\t\t\t<Avatar>\r\n\t\t\t\t<AvatarImage src=\"https://github.com/serafimcloud.png\" />\r\n\t\t\t\t<AvatarFallback>SC</AvatarFallback>\r\n\t\t\t</Avatar>\r\n\t\t</AvatarStack>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Kibo Mini Calendar",
    "description": "Customizable mini calendar component for React, built with Radix UI and Tailwind CSS.",
    "features": [
      "Customizable date selection",
      "Supports range selection",
      "Keyboard navigation",
      "Accessible with ARIA attributes",
      "Responsive design with Tailwind CSS",
      "Animations with Motion One"
    ],
    "author": "haydenbleasel",
    "references": [
      {
        "title": "llms.txt",
        "href": "https://llms.ai/docs/components/calendar"
      },
      {
        "title": "MDN Reference",
        "href": "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/calendar"
      }
    ],
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      },
      {
        "title": "Tailwind CSS",
        "icon": "tailwindcss",
        "href": "https://tailwindcss.com"
      },
      {
        "title": "Motion",
        "icon": "motion",
        "href": "https://motion.dev/one"
      },
      {
        "title": "cva",
        "icon": "cva",
        "href": "https://cva-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Kibo Mini Calendar\r\n\r\nCustomizable mini calendar component for React, built with Radix UI and Tailwind CSS.\r\n\r\n## Features\r\n\r\n- Customizable date selection\r\n- Supports range selection\r\n- Keyboard navigation\r\n- Accessible with ARIA attributes\r\n- Responsive design with Tailwind CSS\r\n- Animations with Motion One\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { MiniCalendar } from \"./index\";\r\n\r\n<MiniCalendar />\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />",
      "/index.tsx": "import { useControllableState } from \"@radix-ui/react-use-controllable-state\";\r\nimport { addDays, format, isSameDay, isToday } from \"date-fns\";\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"lucide-react\";\r\nimport { Slot } from \"radix-ui\";\r\nimport {\r\n\ttype ButtonHTMLAttributes,\r\n\ttype ComponentProps,\r\n\tcreateContext,\r\n\ttype HTMLAttributes,\r\n\ttype MouseEventHandler,\r\n\ttype ReactNode,\r\n\tuseContext,\r\n} from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\n// Context for sharing state between components\r\ntype MiniCalendarContextType = {\r\n\tselectedDate: Date | null | undefined;\r\n\tonDateSelect: (date: Date) => void;\r\n\tstartDate: Date;\r\n\tonNavigate: (direction: \"prev\" | \"next\") => void;\r\n\tdays: number;\r\n};\r\nconst MiniCalendarContext = createContext<MiniCalendarContextType | null>(null);\r\nconst useMiniCalendar = () => {\r\n\tconst context = useContext(MiniCalendarContext);\r\n\tif (!context) {\r\n\t\tthrow new Error(\"MiniCalendar components must be used within MiniCalendar\");\r\n\t}\r\n\treturn context;\r\n};\r\n// Helper function to get array of consecutive dates\r\nconst getDays = (startDate: Date, count: number): Date[] => {\r\n\tconst days: Date[] = [];\r\n\tfor (let i = 0; i < count; i++) {\r\n\t\tdays.push(addDays(startDate, i));\r\n\t}\r\n\treturn days;\r\n};\r\n// Helper function to format date\r\nconst formatDate = (date: Date) => {\r\n\tconst month = format(date, \"MMM\");\r\n\tconst day = format(date, \"d\");\r\n\treturn { month, day };\r\n};\r\nexport type MiniCalendarProps = HTMLAttributes<HTMLDivElement> & {\r\n\tvalue?: Date;\r\n\tdefaultValue?: Date;\r\n\tonValueChange?: (date: Date | undefined) => void;\r\n\tstartDate?: Date;\r\n\tdefaultStartDate?: Date;\r\n\tonStartDateChange?: (date: Date | undefined) => void;\r\n\tdays?: number;\r\n};\r\nexport const MiniCalendar = ({\r\n\tvalue,\r\n\tdefaultValue,\r\n\tonValueChange,\r\n\tstartDate,\r\n\tdefaultStartDate = new Date(),\r\n\tonStartDateChange,\r\n\tdays = 5,\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: MiniCalendarProps) => {\r\n\tconst [selectedDate, setSelectedDate] = useControllableState<\r\n\t\tDate | undefined\r\n\t>({\r\n\t\tprop: value,\r\n\t\tdefaultProp: defaultValue,\r\n\t\tonChange: onValueChange,\r\n\t});\r\n\tconst [currentStartDate, setCurrentStartDate] = useControllableState({\r\n\t\tprop: startDate,\r\n\t\tdefaultProp: defaultStartDate,\r\n\t\tonChange: onStartDateChange,\r\n\t});\r\n\tconst handleDateSelect = (date: Date) => {\r\n\t\tsetSelectedDate(date);\r\n\t};\r\n\tconst handleNavigate = (direction: \"prev\" | \"next\") => {\r\n\t\tconst newStartDate = addDays(\r\n\t\t\tcurrentStartDate || new Date(),\r\n\t\t\tdirection === \"next\" ? days : -days,\r\n\t\t);\r\n\t\tsetCurrentStartDate(newStartDate);\r\n\t};\r\n\tconst contextValue: MiniCalendarContextType = {\r\n\t\tselectedDate: selectedDate || null,\r\n\t\tonDateSelect: handleDateSelect,\r\n\t\tstartDate: currentStartDate || new Date(),\r\n\t\tonNavigate: handleNavigate,\r\n\t\tdays,\r\n\t};\r\n\treturn (\r\n\t\t<MiniCalendarContext.Provider value={contextValue}>\r\n\t\t\t<div\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"flex items-center gap-2 rounded-lg border bg-background p-2\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</MiniCalendarContext.Provider>\r\n\t);\r\n};\r\nexport type MiniCalendarNavigationProps =\r\n\tButtonHTMLAttributes<HTMLButtonElement> & {\r\n\t\tdirection: \"prev\" | \"next\";\r\n\t\tasChild?: boolean;\r\n\t};\r\nexport const MiniCalendarNavigation = ({\r\n\tdirection,\r\n\tasChild = false,\r\n\tchildren,\r\n\tonClick,\r\n\t...props\r\n}: MiniCalendarNavigationProps) => {\r\n\tconst { onNavigate } = useMiniCalendar();\r\n\tconst Icon = direction === \"prev\" ? ChevronLeftIcon : ChevronRightIcon;\r\n\tconst handleClick: MouseEventHandler<HTMLButtonElement> = (event) => {\r\n\t\tonNavigate(direction);\r\n\t\tonClick?.(event);\r\n\t};\r\n\tif (asChild) {\r\n\t\treturn (\r\n\t\t\t<Slot.Root onClick={handleClick} {...props}>\r\n\t\t\t\t{children}\r\n\t\t\t</Slot.Root>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tonClick={handleClick}\r\n\t\t\tsize={asChild ? undefined : \"icon\"}\r\n\t\t\ttype=\"button\"\r\n\t\t\tvariant={asChild ? undefined : \"ghost\"}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children ?? <Icon className=\"size-4\" />}\r\n\t\t</Button>\r\n\t);\r\n};\r\nexport type MiniCalendarDaysProps = Omit<\r\n\tHTMLAttributes<HTMLDivElement>,\r\n\t\"children\"\r\n> & {\r\n\tchildren: (date: Date) => ReactNode;\r\n};\r\nexport const MiniCalendarDays = ({\r\n\tclassName,\r\n\tchildren,\r\n\t...props\r\n}: MiniCalendarDaysProps) => {\r\n\tconst { startDate, days: dayCount } = useMiniCalendar();\r\n\tconst days = getDays(startDate, dayCount);\r\n\treturn (\r\n\t\t<div className={cn(\"flex items-center gap-1\", className)} {...props}>\r\n\t\t\t{days.map((date) => children(date))}\r\n\t\t</div>\r\n\t);\r\n};\r\nexport type MiniCalendarDayProps = ComponentProps<typeof Button> & {\r\n\tdate: Date;\r\n};\r\nexport const MiniCalendarDay = ({\r\n\tdate,\r\n\tclassName,\r\n\t...props\r\n}: MiniCalendarDayProps) => {\r\n\tconst { selectedDate, onDateSelect } = useMiniCalendar();\r\n\tconst { month, day } = formatDate(date);\r\n\tconst isSelected = selectedDate && isSameDay(date, selectedDate);\r\n\tconst isTodayDate = isToday(date);\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"h-auto min-w-[3rem] flex-col gap-0 p-2 text-xs\",\r\n\t\t\t\tisTodayDate && !isSelected && \"bg-accent\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\tonClick={() => onDateSelect(date)}\r\n\t\t\tsize=\"sm\"\r\n\t\t\ttype=\"button\"\r\n\t\t\tvariant={isSelected ? \"default\" : \"ghost\"}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"font-medium text-[10px] text-muted-foreground\",\r\n\t\t\t\t\tisSelected && \"text-primary-foreground/70\",\r\n\t\t\t\t)}\r\n\t\t\t>\r\n\t\t\t\t{month}\r\n\t\t\t</span>\r\n\t\t\t<span className=\"font-semibold text-sm\">{day}</span>\r\n\t\t</Button>\r\n\t);\r\n};\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Kibo Mini Calendar\",\r\n  \"description\": \"Customizable mini calendar component for React, built with Radix UI and Tailwind CSS.\",\r\n  \"features\": [\r\n    \"Customizable date selection\",\r\n    \"Supports range selection\",\r\n    \"Keyboard navigation\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Responsive design with Tailwind CSS\",\r\n    \"Animations with Motion One\"\r\n  ],\r\n  \"author\": \"haydenbleasel\",\r\n  \"references\": [\r\n    {\r\n      \"title\": \"llms.txt\",\r\n      \"href\": \"https://llms.ai/docs/components/calendar\"\r\n    },\r\n    {\r\n      \"title\": \"MDN Reference\",\r\n      \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/calendar\"\r\n    }\r\n  ],\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    },\r\n    {\r\n      \"title\": \"Tailwind CSS\",\r\n      \"icon\": \"tailwindcss\",\r\n      \"href\": \"https://tailwindcss.com\"\r\n    },\r\n    {\r\n      \"title\": \"Motion\",\r\n      \"icon\": \"motion\",\r\n      \"href\": \"https://motion.dev/one\"\r\n    },\r\n    {\r\n      \"title\": \"cva\",\r\n      \"icon\": \"cva\",\r\n      \"href\": \"https://cva-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import {\r\n\tMiniCalendar,\r\n\tMiniCalendarDay,\r\n\tMiniCalendarDays,\r\n\tMiniCalendarNavigation,\r\n} from '/index.tsx';\r\n\r\nexport default function CalendarPreview() {\r\n\treturn (\r\n\t\t<MiniCalendar>\r\n\t\t\t<MiniCalendarNavigation direction=\"prev\" />\r\n\t\t\t<MiniCalendarDays>\r\n\t\t\t\t{(date) => <MiniCalendarDay date={date} key={date.toISOString()} />}\r\n\t\t\t</MiniCalendarDays>\r\n\t\t\t<MiniCalendarNavigation direction=\"next\" />\r\n\t\t</MiniCalendar>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Shadcn Checkbox",
    "description": "Checkbox component for React, built with Radix UI.",
    "features": [
      "Customizable checkbox styles",
      "Keyboard navigation",
      "Accessible with ARIA attributes",
      "Responsive design"
    ],
    "author": "shadcn",
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Shadcn Checkbox\r\n\r\nCheckbox component for React, built with Radix UI.\r\n\r\n## Features\r\n\r\n- Customizable checkbox styles\r\n- Keyboard navigation\r\n- Accessible with ARIA attributes\r\n- Responsive design\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Checkbox } from \"./index\";\r\n\r\n<Checkbox>Check me</Checkbox>\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />\r\n",
      "/index.tsx": "\"use client\";\r\n\r\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\r\nimport { CheckIcon } from \"lucide-react\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Checkbox({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\r\n\treturn (\r\n\t\t<CheckboxPrimitive.Root\r\n\t\t\tdata-slot=\"checkbox\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"peer border-input dark:bg-input/30 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground dark:data-[state=checked]:bg-primary data-[state=checked]:border-primary focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive size-4 shrink-0 rounded-[4px] border shadow-xs transition-shadow outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<CheckboxPrimitive.Indicator\r\n\t\t\t\tdata-slot=\"checkbox-indicator\"\r\n\t\t\t\tclassName=\"flex items-center justify-center text-current transition-none\"\r\n\t\t\t>\r\n\t\t\t\t<CheckIcon className=\"size-3.5\" />\r\n\t\t\t</CheckboxPrimitive.Indicator>\r\n\t\t</CheckboxPrimitive.Root>\r\n\t);\r\n}\r\n\r\nexport { Checkbox };\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Shadcn Checkbox\",\r\n  \"description\": \"Checkbox component for React, built with Radix UI.\",\r\n  \"features\": [\r\n    \"Customizable checkbox styles\",\r\n    \"Keyboard navigation\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Responsive design\"\r\n  ],\r\n  \"author\": \"shadcn\",\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Checkbox } from \"..\";\r\n\r\nexport default function CheckboxPreview() {\r\n\treturn <Checkbox>Check me</Checkbox>;\r\n}\r\n"
    }
  },
  {
    "title": "Shadcn Collapsible",
    "description": "Collapsible component for React, built with Radix UI.",
    "features": [
      "Expandable and collapsible sections",
      "Keyboard navigation",
      "Accessible with ARIA attributes",
      "Customizable animations"
    ],
    "author": "shadcn",
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Shadcn Collapsible\r\n\r\nCollapsible component for React, built with Radix UI.\r\n\r\n## Features\r\n\r\n- Expandable and collapsible sections\r\n- Keyboard navigation\r\n- Accessible with ARIA attributes\r\n- Customizable animations\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Collapsible } from \"./index\";\r\n\r\n<Collapsible>\r\n  <Collapsible.Trigger>Toggle</Collapsible.Trigger>\r\n  <Collapsible.Content>Content goes here</Collapsible.Content>\r\n</Collapsible>\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />\r\n",
      "/index.tsx": "\"use client\";\r\n\r\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\r\n\r\nfunction Collapsible({\r\n\t...props\r\n}: React.ComponentProps<typeof CollapsiblePrimitive.Root>) {\r\n\treturn <CollapsiblePrimitive.Root data-slot=\"collapsible\" {...props} />;\r\n}\r\n\r\nfunction CollapsibleTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleTrigger>) {\r\n\treturn (\r\n\t\t<CollapsiblePrimitive.CollapsibleTrigger\r\n\t\t\tdata-slot=\"collapsible-trigger\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CollapsibleContent({\r\n\t...props\r\n}: React.ComponentProps<typeof CollapsiblePrimitive.CollapsibleContent>) {\r\n\treturn (\r\n\t\t<CollapsiblePrimitive.CollapsibleContent\r\n\t\t\tdata-slot=\"collapsible-content\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Shadcn Collapsible\",\r\n  \"description\": \"Collapsible component for React, built with Radix UI.\",\r\n  \"features\": [\r\n    \"Expandable and collapsible sections\",\r\n    \"Keyboard navigation\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Customizable animations\"\r\n  ],\r\n  \"author\": \"shadcn\",\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"..\";\r\n\r\nexport default function CollapsiblePreview() {\r\n\treturn (\r\n\t\t<Collapsible>\r\n\t\t\t<CollapsibleTrigger>Toggle</CollapsibleTrigger>\r\n\t\t\t<CollapsibleContent>Content goes here</CollapsibleContent>\r\n\t\t</Collapsible>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Shadcn Command",
    "description": "Command palette component for React, built with cmdk.",
    "features": [
      "Command palette with search",
      "Keyboard navigation",
      "Accessible with ARIA attributes",
      "Customizable design"
    ],
    "author": "shadcn",
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "cmdk",
        "icon": "cmdk",
        "href": "https://cmdk.dev"
      }
    ],
    "files": {
      "/index.mdx": "# Shadcn Command\r\n\r\nCommand palette component for React, built with cmdk.\r\n\r\n## Features\r\n\r\n- Command palette with search\r\n- Keyboard navigation\r\n- Accessible with ARIA attributes\r\n- Customizable design\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Command } from \"./index\";\r\n\r\n<Command>\r\n  <div>Command content goes here</div>\r\n</Command>\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />\r\n",
      "/index.tsx": "\"use client\";\r\n\r\nimport { Command as CommandPrimitive } from \"cmdk\";\r\nimport { SearchIcon } from \"lucide-react\";\r\nimport type * as React from \"react\";\r\nimport {\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogDescription,\r\n\tDialogHeader,\r\n\tDialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Command({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive>) {\r\n\treturn (\r\n\t\t<CommandPrimitive\r\n\t\t\tdata-slot=\"command\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"bg-popover text-popover-foreground flex h-full w-full flex-col overflow-hidden rounded-md\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandDialog({\r\n\ttitle = \"Command Palette\",\r\n\tdescription = \"Search for a command to run...\",\r\n\tchildren,\r\n\tclassName,\r\n\tshowCloseButton = true,\r\n\t...props\r\n}: React.ComponentProps<typeof Dialog> & {\r\n\ttitle?: string;\r\n\tdescription?: string;\r\n\tclassName?: string;\r\n\tshowCloseButton?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<Dialog {...props}>\r\n\t\t\t<DialogHeader className=\"sr-only\">\r\n\t\t\t\t<DialogTitle>{title}</DialogTitle>\r\n\t\t\t\t<DialogDescription>{description}</DialogDescription>\r\n\t\t\t</DialogHeader>\r\n\t\t\t<DialogContent\r\n\t\t\t\tclassName={cn(\"overflow-hidden p-0\", className)}\r\n\t\t\t\tshowCloseButton={showCloseButton}\r\n\t\t\t>\r\n\t\t\t\t<Command className=\"[&_[cmdk-group-heading]]:text-muted-foreground **:data-[slot=command-input-wrapper]:h-12 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group]]:px-2 [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</Command>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nfunction CommandInput({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Input>) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"command-input-wrapper\"\r\n\t\t\tclassName=\"flex h-9 items-center gap-2 border-b px-3\"\r\n\t\t>\r\n\t\t\t<SearchIcon className=\"size-4 shrink-0 opacity-50\" />\r\n\t\t\t<CommandPrimitive.Input\r\n\t\t\t\tdata-slot=\"command-input\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"placeholder:text-muted-foreground flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-hidden disabled:cursor-not-allowed disabled:opacity-50\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nfunction CommandList({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.List>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.List\r\n\t\t\tdata-slot=\"command-list\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"max-h-[300px] scroll-py-1 overflow-x-hidden overflow-y-auto\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandEmpty({\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Empty>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Empty\r\n\t\t\tdata-slot=\"command-empty\"\r\n\t\t\tclassName=\"py-6 text-center text-sm\"\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandGroup({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Group>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Group\r\n\t\t\tdata-slot=\"command-group\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"text-foreground [&_[cmdk-group-heading]]:text-muted-foreground overflow-hidden p-1 [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandSeparator({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Separator>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Separator\r\n\t\t\tdata-slot=\"command-separator\"\r\n\t\t\tclassName={cn(\"bg-border -mx-1 h-px\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandItem({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof CommandPrimitive.Item>) {\r\n\treturn (\r\n\t\t<CommandPrimitive.Item\r\n\t\t\tdata-slot=\"command-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled=true]:pointer-events-none data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction CommandShortcut({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<\"span\">) {\r\n\treturn (\r\n\t\t<span\r\n\t\t\tdata-slot=\"command-shortcut\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"text-muted-foreground ml-auto text-xs tracking-widest\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tCommand,\r\n\tCommandDialog,\r\n\tCommandInput,\r\n\tCommandList,\r\n\tCommandEmpty,\r\n\tCommandGroup,\r\n\tCommandItem,\r\n\tCommandShortcut,\r\n\tCommandSeparator,\r\n};\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Shadcn Command\",\r\n  \"description\": \"Command palette component for React, built with cmdk.\",\r\n  \"features\": [\r\n    \"Command palette with search\",\r\n    \"Keyboard navigation\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Customizable design\"\r\n  ],\r\n  \"author\": \"shadcn\",\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"cmdk\",\r\n      \"icon\": \"cmdk\",\r\n      \"href\": \"https://cmdk.dev\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Command } from \"..\";\r\n\r\nexport default function CommandPreview() {\r\n\treturn (\r\n\t\t<Command>\r\n\t\t\t<div>Command content goes here</div>\r\n\t\t</Command>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Shadcn Dialog",
    "description": "Dialog component for React, built with Radix UI.",
    "features": [
      "Customizable modal dialogs",
      "Keyboard navigation",
      "Accessible with ARIA attributes",
      "Responsive design"
    ],
    "author": "shadcn",
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Shadcn Dialog\r\n\r\nDialog component for React, built with Radix UI.\r\n\r\n## Features\r\n\r\n- Customizable modal dialogs\r\n- Keyboard navigation\r\n- Accessible with ARIA attributes\r\n- Responsive design\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Dialog } from \"./index\";\r\n\r\n<Dialog>\r\n  <Dialog.Trigger>Open Dialog</Dialog.Trigger>\r\n  <Dialog.Content>Dialog content goes here</Dialog.Content>\r\n</Dialog>\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />\r\n",
      "/index.tsx": "\"use client\";\r\n\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport { XIcon } from \"lucide-react\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Dialog({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\r\n\treturn <DialogPrimitive.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\r\n\treturn <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\r\n\treturn <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\r\n\treturn <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogOverlay({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\r\n\treturn (\r\n\t\t<DialogPrimitive.Overlay\r\n\t\t\tdata-slot=\"dialog-overlay\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogContent({\r\n\tclassName,\r\n\tchildren,\r\n\tshowCloseButton = true,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Content> & {\r\n\tshowCloseButton?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<DialogPortal data-slot=\"dialog-portal\">\r\n\t\t\t<DialogOverlay />\r\n\t\t\t<DialogPrimitive.Content\r\n\t\t\t\tdata-slot=\"dialog-content\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t\t{showCloseButton && (\r\n\t\t\t\t\t<DialogPrimitive.Close\r\n\t\t\t\t\t\tdata-slot=\"dialog-close\"\r\n\t\t\t\t\t\tclassName=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XIcon />\r\n\t\t\t\t\t\t<span className=\"sr-only\">Close</span>\r\n\t\t\t\t\t</DialogPrimitive.Close>\r\n\t\t\t\t)}\r\n\t\t\t</DialogPrimitive.Content>\r\n\t\t</DialogPortal>\r\n\t);\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"dialog-header\"\r\n\t\t\tclassName={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tdata-slot=\"dialog-footer\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\r\n\t\t\t\tclassName,\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogTitle({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\r\n\treturn (\r\n\t\t<DialogPrimitive.Title\r\n\t\t\tdata-slot=\"dialog-title\"\r\n\t\t\tclassName={cn(\"text-lg leading-none font-semibold\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogDescription({\r\n\tclassName,\r\n\t...props\r\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\r\n\treturn (\r\n\t\t<DialogPrimitive.Description\r\n\t\t\tdata-slot=\"dialog-description\"\r\n\t\t\tclassName={cn(\"text-muted-foreground text-sm\", className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tDialog,\r\n\tDialogClose,\r\n\tDialogContent,\r\n\tDialogDescription,\r\n\tDialogFooter,\r\n\tDialogHeader,\r\n\tDialogOverlay,\r\n\tDialogPortal,\r\n\tDialogTitle,\r\n\tDialogTrigger,\r\n};\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Shadcn Dialog\",\r\n  \"description\": \"Dialog component for React, built with Radix UI.\",\r\n  \"features\": [\r\n    \"Customizable modal dialogs\",\r\n    \"Keyboard navigation\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Responsive design\"\r\n  ],\r\n  \"author\": \"shadcn\",\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Dialog, DialogContent, DialogTrigger } from \"..\";\r\n\r\nexport default function DialogPreview() {\r\n\treturn (\r\n\t\t<Dialog>\r\n\t\t\t<DialogTrigger>Open Dialog</DialogTrigger>\r\n\t\t\t<DialogContent>Dialog content goes here</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n"
    }
  },
  {
    "title": "Shadcn Popover",
    "description": "Popover component for React, built with Radix UI.",
    "features": [
      "Customizable popover content",
      "Keyboard navigation",
      "Accessible with ARIA attributes",
      "Responsive design"
    ],
    "author": "shadcn",
    "tools": [
      {
        "title": "React",
        "icon": "react",
        "href": "https://react.dev"
      },
      {
        "title": "TypeScript",
        "icon": "typescript",
        "href": "https://www.typescriptlang.org"
      },
      {
        "title": "Radix UI",
        "icon": "radix",
        "href": "https://www.radix-ui.com"
      }
    ],
    "files": {
      "/index.mdx": "# Shadcn Popover\r\n\r\nPopover component for React, built with Radix UI.\r\n\r\n## Features\r\n\r\n- Customizable popover content\r\n- Keyboard navigation\r\n- Accessible with ARIA attributes\r\n- Responsive design\r\n\r\n## Usage\r\n\r\n```tsx\r\nimport { Popover } from \"./index\";\r\n\r\n<Popover>\r\n  <Popover.Trigger>Open Popover</Popover.Trigger>\r\n  <Popover.Content>Popover content goes here</Popover.Content>\r\n</Popover>\r\n```\r\n\r\n## Previews\r\n\r\n### Minimal\r\n<Preview path={'/previews/minimal.tsx'} />\r\n",
      "/index.tsx": "\"use client\";\r\n\r\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\r\nimport type * as React from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nfunction Popover({\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Root>) {\r\n\treturn <PopoverPrimitive.Root data-slot=\"popover\" {...props} />;\r\n}\r\n\r\nfunction PopoverTrigger({\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Trigger>) {\r\n\treturn <PopoverPrimitive.Trigger data-slot=\"popover-trigger\" {...props} />;\r\n}\r\n\r\nfunction PopoverContent({\r\n\tclassName,\r\n\talign = \"center\",\r\n\tsideOffset = 4,\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Content>) {\r\n\treturn (\r\n\t\t<PopoverPrimitive.Portal>\r\n\t\t\t<PopoverPrimitive.Content\r\n\t\t\t\tdata-slot=\"popover-content\"\r\n\t\t\t\talign={align}\r\n\t\t\t\tsideOffset={sideOffset}\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 w-72 origin-(--radix-popover-content-transform-origin) rounded-md border p-4 shadow-md outline-hidden\",\r\n\t\t\t\t\tclassName,\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</PopoverPrimitive.Portal>\r\n\t);\r\n}\r\n\r\nfunction PopoverAnchor({\r\n\t...props\r\n}: React.ComponentProps<typeof PopoverPrimitive.Anchor>) {\r\n\treturn <PopoverPrimitive.Anchor data-slot=\"popover-anchor\" {...props} />;\r\n}\r\n\r\nexport { Popover, PopoverTrigger, PopoverContent, PopoverAnchor };\r\n",
      "/metadata.json": "{\r\n  \"title\": \"Shadcn Popover\",\r\n  \"description\": \"Popover component for React, built with Radix UI.\",\r\n  \"features\": [\r\n    \"Customizable popover content\",\r\n    \"Keyboard navigation\",\r\n    \"Accessible with ARIA attributes\",\r\n    \"Responsive design\"\r\n  ],\r\n  \"author\": \"shadcn\",\r\n  \"tools\": [\r\n    {\r\n      \"title\": \"React\",\r\n      \"icon\": \"react\",\r\n      \"href\": \"https://react.dev\"\r\n    },\r\n    {\r\n      \"title\": \"TypeScript\",\r\n      \"icon\": \"typescript\",\r\n      \"href\": \"https://www.typescriptlang.org\"\r\n    },\r\n    {\r\n      \"title\": \"Radix UI\",\r\n      \"icon\": \"radix\",\r\n      \"href\": \"https://www.radix-ui.com\"\r\n    }\r\n  ]\r\n}",
      "/previews/minimal.tsx": "import { Popover, PopoverContent, PopoverTrigger } from \"..\";\r\n\r\nexport default function PopoverPreview() {\r\n\treturn (\r\n\t\t<Popover>\r\n\t\t\t<PopoverTrigger>Open Popover</PopoverTrigger>\r\n\t\t\t<PopoverContent>Popover content goes here</PopoverContent>\r\n\t\t</Popover>\r\n\t);\r\n}\r\n"
    }
  }
]